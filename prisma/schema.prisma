// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  builds    Build[]
  favorites Favorite[]
}

model Favorite {
  id      Int   @id @default(autoincrement())
  user    User  @relation(fields: [userId], references: [id])
  userId  Int
  build   Build @relation(fields: [buildId], references: [id])
  buildId Int
}

model Build {
  id            Int            @id @default(autoincrement())
  author        User           @relation(fields: [authorId], references: [id])
  authorId      Int            @unique
  characterName String
  level         Int
  origin        Int
  race          Int
  subRace       Int
  background    Int
  strength      Int
  dexterity     Int
  constitution  Int
  wisdom        Int
  charisma      Int
  plus2         String
  plus1         String
  helmet        Int
  cloak         Int
  armour        Int
  gloves        Int
  boots         Int
  amulet        Int
  ring1         Int
  ring2         Int
  meleeMH       Int
  meleeOH       Int?
  rangedMH      Int
  rangedOH      Int?
  armourClass   Int
  classList     AddedClass[]
  cantrips      AddedCantrip[]
  spells        AddedSpell[]
  favorites     Favorite[]
}

model Class {
  id       Int          @id @default(autoincrement())
  builds   AddedClass[]
  classId  Int
  name     String
  modifier String
}

model AddedClass {
  id          Int     @id @default(autoincrement())
  build       Build   @relation(fields: [buildId], references: [id])
  class       Class   @relation(fields: [classId], references: [id])
  buildId     Int
  classId     Int
  name        String
  subClass    String?
  level       Int
  levelsAdded String
  modifier    String
  order       Int

  @@index([buildId, classId])
}

model Cantrip {
  id        Int            @id @default(autoincrement())
  builds    AddedCantrip[]
  cantripId Int
}

model AddedCantrip {
  id        Int     @id @default(autoincrement())
  build     Build   @relation(fields: [buildId], references: [id])
  cantrip   Cantrip @relation(fields: [cantripId], references: [id])
  buildId   Int
  cantripId Int

  @@index([buildId, cantripId])
}

model Spell {
  id      Int          @id @default(autoincrement())
  builds  AddedSpell[]
  spellId Int
}

model AddedSpell {
  id      Int   @id @default(autoincrement())
  build   Build @relation(fields: [buildId], references: [id])
  spell   Spell @relation(fields: [spellId], references: [id])
  buildId Int
  spellId Int

  @@index([buildId, spellId])
}
